#
#  Author: Hari Sekhon
#  Date: 2019-11-28 18:51:59 +0000 (Thu, 28 Nov 2019)
#
#  vim:ts=2:sts=2:sw=2:et
#
#  https://github.com/harisekhon/kubernetes-templates
#
#  License: see accompanying Hari Sekhon LICENSE file
#
#  If you're using my code you're welcome to connect with me on LinkedIn
#  and optionally send me feedback to help improve or steer this or other code I publish
#
#  https://www.linkedin.com/in/HariSekhon
#

# ============================================================================ #
#                             S t a t e f u l S e t
# ============================================================================ #

# https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/
#
# see pod anti-affinity here:
#
# https://kubernetes.io/docs/tutorials/stateful-application/zookeeper/

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: pgsql
  namespace: NAMESPACE
  annotations:
    # see also k8s_pod_disruption_budget.yaml
    cluster-autoscaler.kubernetes.io/safe-to-evict: False
spec:
  replicas: 3
  serviceName: pgsql
  selector:
    matchLabels:
      app: pgsql
  nodeSelector:
    disktype: ssd
  template:
    metadata:
      labels:
        app: pgsql
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - nodeSelectorTerms:
              - matchExpressions:
                # Node preemption:
                # - shuts down pods ungracefully
                # - ignores PodDisruptionBudget
                # - invalidate Stateful guarantees and can lead to data loss !!
                # https://cloud.google.com/kubernetes-engine/docs/how-to/preemptible-vms#kubernetes_constraint_violations
                # https://cloud.google.com/kubernetes-engine/docs/how-to/preemptible-vms#best_practices
                - key: cloud.google.com/gke-preemptible
                  operator: DoesNotExist
      containers:
      - name: pgsql
        image: postgres:9.6
        ports:
          - name: pgsql
            containerPort: 5432
        readinessProbe:
          # http, tcp or exec
          #httpGet:
          #  path: /healthz
          #  port: 8080
          # only uncomment if you can't use http check, must comment/delete http check otherwise will get this error:
          # invalid: spec.containers[0].livenessProbe.tcpSocket: Forbidden: may not specify more than 1 handler type
          tcpSocket:
            port: 5432
          initialDelaySeconds: 0 # default
          successThreshold: 1    # default
          failureThreshold: 3    # default
          periodSeconds: 10      # default (interval)
          timeoutSeconds: 1      # default
        livenessProbe:
          #httpGet:
          #  path: /healthz
          #  port: 8080
          tcpSocket:
            port: 5432
          initialDelaySeconds: 0 # default
          successThreshold: 1    # default
          failureThreshold: 3    # default
          periodSeconds: 10      # default (interval)
          timeoutSeconds: 1      # default
        volumeMounts:
          - name: pgdata
            mountPath: /var/lib/pgsql
  volumeClaimTemplates:
  - metadata:
      name: pgdata
    spec:
      # optional: requires storageclass-*.yaml
      #storageClassName: ssd
      #storageClassName: ssd-resizeable
      #storageClassName: standard-resizeable
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          # resize here doesn't affect the PVC, must edit the PVC directly to trigger the provider resize, didn't even need a pod cycle in GCP testing
          storage: 10Gi
